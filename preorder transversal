#include <stdio.h>
#include <stdlib.h>

typedef struct TreeNode {
    int value;         
    struct TreeNode* left;
    struct TreeNode* right; 
} TreeNode;

TreeNode* createNode(int value) {
    TreeNode* newNode = (TreeNode*)malloc(sizeof(TreeNode));
    if (newNode == NULL) {
        fprintf(stderr, "Memory allocation failed\n");
        exit(EXIT_FAILURE);
    }
    newNode->value = value;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

void preOrderTraversal(TreeNode* node) {
    if (node == NULL) return; 
    printf("%d ", node->value);   
    preOrderTraversal(node->left);  
    preOrderTraversal(node->right); 
}

int main() {
    // Create nodes of the binary tree
    TreeNode* root = createNode(10);
    root->left = createNode(5);
    root->right = createNode(15);
    root->left->left = createNode(3);
    root->left->right = createNode(7);
    root->right->left = createNode(12);
    root->right->right = createNode(18);

    printf("Pre-order Traversal of Binary Tree:\n");
    preOrderTraversal(root);
    printf("\n");

    return 0;
}
